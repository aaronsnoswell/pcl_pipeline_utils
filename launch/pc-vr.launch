<launch>

  <!-- Launch file to run on the VR PC -->
  <!-- (i.e. Heffalump) -->

  <arg name="input_topic" default="/vrt/fromrobot/pcl/03_compressed" />
  
  <!-- Decompression -->
  <node pkg="vrteleop" type="pcl_decompression" name="pipeline_decompression" output="screen" >
    <remap from="input" to="$(arg input_topic)" />
    <remap from="output" to="/vrt/fromrobot/pcl/04_decompressed" />
  </node>
  
  <!-- MLS Smoothing -->
  <arg name="mls_search_radius" default="0.3" />
  <node pkg="vrteleop" type="pcl_smoothing" name="pipeline_smoothing" output="screen" >
    <remap from="input" to="/vrt/fromrobot/pcl/04_decompressed" />

    <param name="search_radius" type="double" value="$(arg mls_search_radius)" />

    <remap from="output" to="/vrt/fromrobot/pcl/05_smoothed" />
  </node>

	<!-- Alias the output point cloud -->
	<node name="alias" pkg="vrteleop" type="forwarder.py"
		args="/vrt/fromrobot/pcl/05_smoothed /vrt/fromrobot/pcl/vr_ready" />

  <!-- Launch ROSBridge so we can connect from UE4 -->
  <arg name="port" default="9090" />
  <arg name="host" default="" />
  <arg name="bson_only_mode" default="false" />
  <arg name="use_websocket" default="true" />
  <include file="$(find vrteleop)/launch/rosbridge.launch" >
    <arg name="port" value="$(arg port)" />
    <arg name="host" value="$(arg host)" />
    <arg name="bson_only_mode" value="$(arg bson_only_mode)" />
    <arg name="use_websocket" value="$(arg use_websocket)" />
  </include>

</launch>

